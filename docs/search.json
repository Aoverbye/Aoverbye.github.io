[
  {
    "objectID": "game_page.html",
    "href": "game_page.html",
    "title": "game_page",
    "section": "",
    "text": "library(shiny)\n\nWarning: package 'shiny' was built under R version 4.4.2\n\n# UI\nui &lt;- fluidPage(\n  titlePanel(\"Guess the Number Game\"),\n  sidebarLayout(\n    sidebarPanel(\n      numericInput(\"guess\", \"Enter a guess:\", min = 1, max = 100, value = 50),\n      actionButton(\"submit\", \"Submit Guess\"),\n      textOutput(\"result\")\n    ),\n    mainPanel(\n      textOutput(\"instructions\")\n    )\n  )\n)\n\n# Server logic\nserver &lt;- function(input, output, session) {\n  target_number &lt;- sample(1:100, 1)\n  \n  output$instructions &lt;- renderText({\n    \"Try to guess the target number between 1 and 100.\"\n  })\n  \n  observeEvent(input$submit, {\n    guess &lt;- input$guess\n    if(guess == target_number) {\n      output$result &lt;- renderText(\"Congrats! You guessed the number.\")\n    } else {\n      output$result &lt;- renderText(paste(\"Wrong! The target number was\", target_number))\n    }\n  })\n}\n\n# Run the application\nshinyApp(ui = ui, server = server)\n\nShiny applications not supported in static R Markdown documents"
  },
  {
    "objectID": "blog_posts/2025-3-14-air-freight-viz/air_freight_post.html",
    "href": "blog_posts/2025-3-14-air-freight-viz/air_freight_post.html",
    "title": "The Freight That Flies",
    "section": "",
    "text": "Code\n# Load packages\nlibrary(tidycensus)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(tmap)\nlibrary(here)\nlibrary(janitor)\nlibrary(usdata)\nlibrary(tigris)\nlibrary(sf)\nlibrary(scales)\nlibrary(airportr)\nlibrary(ggmap)\nlibrary(maps)\nlibrary(patchwork) \nlibrary(lubridate)\nlibrary(gridExtra)\nlibrary(ggalluvial)\nlibrary(geosphere)\nlibrary(waffle)\nlibrary(showtext)\nlibrary(ggbump)\n\n\n\nExploring Air Freight: Visualizing the Journey of Airborne Cargo Using R\nI have been watching airplanes fly by all of my life. I have always found myself looking at the airplanes and wondering who or what is on those airplanes. I have been ordering stuff online for all of my adult life. I realize that the majority of items I order do not come from nearby and probably have undergone their own journeys to arrive in possession.\nAs a student in the Masters in Environmental Data Science program at the University of California Santa Barbara, I was given the opportunity to create some data visualizations on any topic of my choosing so I decided I would answer my mostly life long question about airplanes and shipping. I wanted to know where are planes coming from and going to? How much do we actually ship via freight? How has this changed over time? This is a guide on how I created the visuals I used to answer these questions.\n\n\nDefinitions and Background\n\nBackground on data\nThe data comes from the Department of Transportation’s Air Carriers: T-100 International Segment for US carriers only data. This contains information on all international flights to and from the United States, focusing primarily on freight volume (in pounds) and departure/destination details. While the dataset included IATA airport codes (3-letter location identifiers), it lacked geographic coordinates. I added this information by using the airportr package and merging the datasets.\n\n\nData loading\n\n\nCode\n# Function for reading in CSVs\nread &lt;- function(year) {\n  file_name &lt;- paste0(\"flights\", year, \".csv\") \n  file_path &lt;- here(\"blog_posts\", \"2025-3-14-air-freight-viz\", \"data\", file_name) \n  \n  # Read and filter dataset\n  df &lt;- read.csv(file_path) %&gt;%\n    filter(FREIGHT != 0) %&gt;% \n    clean_names()\n  \n  return(df)\n}\n\n\n\n\nReading in the data via the function\n\n\nCode\n# Read in data via function\n\nfreight2024 &lt;- read(2024)\nfreight2023 &lt;- read(2023)\nfreight2022 &lt;- read(2022)\nfreight2021 &lt;- read(2021)\nfreight2020 &lt;- read(2020)\nfreight2019 &lt;- read(2019)\nfreight2018 &lt;- read(2018)\nfreight2017 &lt;- read(2017)\nfreight2016 &lt;- read(2016)\nfreight2015 &lt;- read(2015)\nfreight2014 &lt;- read(2014)\nfreight2013 &lt;- read(2013)\nfreight2012 &lt;- read(2012)\nfreight2011 &lt;- read(2011)\nfreight2010 &lt;- read(2010)\nfreight2009 &lt;- read(2009)\nfreight2008 &lt;- read(2008)\nfreight2007 &lt;- read(2007)\nfreight2006 &lt;- read(2006)\nfreight2005 &lt;- read(2005)\nfreight2004 &lt;- read(2004)\n\n\n\n\nCode\n# Create function to join datasets\njoin_freight_data &lt;- function(...) {\n  Reduce(full_join, list(...))\n}\n\n\n\n\nCode\n# Use the function to join all datasets\nfreight_all &lt;- join_freight_data(\n  freight2004, freight2005, freight2006, freight2007, \n  freight2008, freight2009, freight2010, freight2011, \n  freight2012, freight2013, freight2014, freight2015, \n  freight2016, freight2017, freight2018, freight2019, \n  freight2020, freight2021, freight2022, freight2023, \n  freight2024\n)\n\n\n\n\nCode\nair_coords &lt;- airports %&gt;% \n  clean_names()\n\n\n\n\n\nThe Visualizations:\n\n\nThe Map\nThe first visualization I wanted to create was a map showing which airports had the largest amount of freight in pounds traveling between them. While the map adequately visualized the the connections between the airports, it should be noted that it does not accurately show the route the planes took. For example, a plane flying from Anchorage Alaska to South Korea is most likely going to fly over the pacific ocean, not over the Atlantic, Africa and the rest of Asia.\n\nData cleaning and combining for the map\n\n\nCode\n# Rename origin and dest columns\nfreight_map_data &lt;- freight_all %&gt;% \n  rename(iata_origin = origin) %&gt;% \n  rename(iata_dest = dest)\n\n\n\n\nCode\n# Duplicating iata coloumn\nair_coords$iata_origin = air_coords$iata\n\n# Renaming original iata column\nair_coords_rn &lt;- air_coords %&gt;% \n  rename(iata_dest = iata)\n\n\n\n\nCode\n# Duplicate and rename lat longs\nair_coords_rn$lat_dest = air_coords_rn$latitude\nair_coords_rn$long_dest = air_coords_rn$longitude\n\n\n\n\nCode\n# Rename original lat longs\nair_duocoords &lt;- air_coords_rn %&gt;% \n  rename(lat_origin = latitude) %&gt;% \n  rename(long_origin = longitude)\n\n\n\n\nJoining the data\nThis is where I joined the edited freight data with the airport coordinate data.\n\n\nCode\n# Join freight_all with air_duocoords to get destination coordinates\nfreight_coords &lt;- freight_map_data %&gt;%\n  left_join(air_duocoords %&gt;%\n              select(iata_dest, lat_dest, long_dest), \n            by = \"iata_dest\") %&gt;%\n  # Join again to get origin coordinates\n  left_join(air_duocoords %&gt;%\n              select(iata_origin, lat_origin, long_origin), \n            by = \"iata_origin\")\n\n\n\n\nCode\nairport_routes &lt;- freight_coords %&gt;%\n  group_by(iata_origin, iata_dest) %&gt;%\n  mutate(freight_shipped = sum(freight, na.rm = TRUE)) %&gt;%  # Sum freight shipped for each route\n  ungroup() %&gt;%  # Remove grouping after adding the freight count\n  distinct(iata_origin, iata_dest, .keep_all = TRUE) %&gt;%  # Keep only unique routes\n  arrange(desc(freight_shipped)) \n\n\n\n\nCode\n# Filtering for the top 20 routes\ntop_20_routes &lt;- airport_routes %&gt;%\n  arrange(desc(freight_shipped)) %&gt;%\n  head(20)\n\n\n\n\nPlotting the map\nTo create the map, I used ggplot2. I used geom_curve to ensure the lines between the airports were curved and not just straight.\n\n\nCode\n# Define an aviation-themed color palette\naviation_pal &lt;- c(\"#1E3A8A\", \"#d2232aff\", \"#e369a2ff\", \"#93C5FD\",  \n                  \"#6366F1\", \"#f68b21ff\", \"#FACC15\", \"#F97316\",  \n                  \"#64748B\", \"#94A3B8\", \"#CBD5E1\", \"#E5E7EB\")  \n\n# Get world map data\nworld_map &lt;- map_data(\"world\")\n\n# Create ggplot \nmap_pounds &lt;- ggplot() +\n  # Add world map background with aviation theme\n  geom_polygon(data = world_map, aes(x = long, y = lat, group = group),\n               fill = \"#CBD5E1\", color = \"#CBD5E1\") +  # Light gray-blue for land with slightly darker borders\n  \n  # Add curved lines for routes\n  geom_curve(data = top_20_routes, \n             aes(x = long_origin, y = lat_origin, \n                 xend = long_dest, yend = lat_dest),\n             color = \"#3B82F6\",  # Medium blue for flight paths\n             curvature = 0.2, size = .5, alpha = 0.8) +\n  \n  # Add points for origin airports\n  geom_point(data = top_20_routes, aes(x = long_origin, y = lat_origin, color = \"Origin\"), \n             size = 1) +\n  \n  # Add points for destination airports\n  geom_point(data = top_20_routes, aes(x = long_dest, y = lat_dest, color = \"Destination\"), \n             size = 1) +\n  \n  # Theme settings matching the bump chart style\n  theme_minimal() +\n  theme(axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        panel.grid = element_blank(),\n\n        legend.position = c(.48, .013),\n        legend.justification = c(\"center\"),\n        legend.direction = \"horizontal\",\n        legend.text = element_text(size = 10, face = \"bold\"),\n        plot.title = element_text(size = 14, face = \"bold\"),\n        plot.margin = margin(20, 50, 20, 50)\n        ) +\n  \n  # Add the legend with colors from aviation palette\n  scale_color_manual(values = c(\"Origin\" = \"#EAB308\",  # Gold for origin points (resembles takeoff)\n                                \"Destination\" = \"#F97316\"),  # Orange for destination points (resembles landing)\n                     name = \" \") +\n  \n  labs(title = \"Top Air-Freight Connections\", \n       x = \"\", y = \"\")\n\n# Store the plot in a variable\nroute_map &lt;- map_pounds\nroute_map\n\n\n\n\n\n\n\n\n\nI enjoy looking at the map and imagining which planes might be coming from different areas.\n\n\n\nThe bump chart\nThe data I am using includes information from 2004 all the way to 2024. For the basic map made above, I used information from all the years. However, where things are coming from and going to has almost certainly changed over the past 20 years. This is where I thought using a bump chart could effectively show how things have shifted over the past several years.\n\n\nCode\n# Get the amount of freight based on the non us country \nother_countries_col &lt;- freight_all %&gt;% \n  mutate(other_country = ifelse(origin_country_name == \"United States\", dest_country_name, origin_country_name)) %&gt;% \n  group_by(other_country, year) %&gt;%\n  summarize(total_freight = sum(freight, na.rm = TRUE))\n\n\n\n\nCode\n# Rank the number one countries by year\ncountry_rank_by_year &lt;- other_countries_col %&gt;%\n  filter(year &gt;= 2019) %&gt;% \n  select(year, other_country, total_freight) %&gt;% \n  group_by(year) %&gt;% \n  mutate(\n    rank = row_number(desc(total_freight))\n  ) %&gt;% \n  ungroup() %&gt;% \n  arrange(rank, year)\n\n\n\n\nCode\n# Filter for 2024\ntop_countries_2024 &lt;- country_rank_by_year %&gt;% \n  filter(year == 2024, rank &lt;= 10) %&gt;% \n  pull(other_country)\n\n\n\nPlotting the bump chart\nThe reasoning behind using a bump chart for this visualization is not only because it can display the information accurately, but also because it gives a sense of flow and travel. One of the key themes I want on my visualization is a sense of movement and forward flow.\n\n\nCode\nggplot(country_rank_by_year %&gt;% filter(other_country %in% top_countries_2024), \n       aes(x = year, y = rank, color = other_country)) + \n\n  # Add smooth curved lines\n  geom_bump(linewidth = 1.5) +\n\n  # Add points for better visibility\n  geom_point(size = 4) +\n\n  # Left-side country labels (adjusted positioning)\n  geom_text(\n    data = country_rank_by_year %&gt;% filter(year == 2019, other_country %in% top_countries_2024),\n    aes(label = other_country), \n    hjust = 1, \n    nudge_x = -0.15, \n    size = 5, \n    fontface = \"bold\"\n  ) +\n\n  # Right-side rank labels (adjusted positioning)\n  geom_text(\n    data = country_rank_by_year %&gt;% filter(year == 2024, other_country %in% top_countries_2024),\n    aes(label = rank), \n    hjust = 0, \n    nudge_x = 0.15, \n    size = 5, \n    fontface = \"bold\"\n  ) +\n\n  # Reverse y-axis for ranking (1st place at the top)\n  scale_y_reverse() +\n\n  # Apply aviation color palette\n  scale_color_manual(values = aviation_pal, guide = \"none\") +\n\n  # Adjust boundaries to prevent cutoff\n  coord_cartesian(xlim = c(2018.9, 2024.1), ylim = c(11, 0.5), clip = \"off\") +\n  \n  labs(title = \"Top 10 Air-Freight Trade Partners of the U.S\") +\n  \n  # Aesthetic improvements\n  theme_minimal() +\n  theme(\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5),\n    axis.title = element_blank(),\n    axis.text.y = element_blank(),\n    axis.text.x = element_text(size = 14, face = \"bold\"),\n    legend.position = \"none\",\n    plot.margin = margin(20, 50, 20, 100) # Increased margins\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nCreating the timeline\nAfter creating the bump chart, my next goal was to create a timeline that showed how the amount of freight in pounds has changed over the past 20 years. When I was thinking of how to put all of the elements together, I originally wanted the bump chart and the timeline to focus on the same amount of years. However, when I lengthened the time frame of the bump chart, the information got harder to follow and it lost its use in conveying information. When I tried to shorten the timeline, certain events like the freight recession, became less noticeable. Ultimately, I decided it was better and more interesting if the plots focused on different years.\n\n\nCode\n# Convert year and month into a proper date format\nfreight_all &lt;- freight_all %&gt;%\n  mutate(date = make_date(year, month, 1))\n\n\n\n\nCode\n# Aggregate freight by month\nfreight_month &lt;- freight_all %&gt;%\n  group_by(year, month) %&gt;%\n  summarise(total_freight = sum(freight, na.rm = TRUE), .groups = \"drop\") %&gt;%\n  mutate(date = make_date(year, month, 1)) \n\n\n\nPlotting the timeline\nPlotting the timeline involved making some of the harder visual decisions. I wanted to show the lines for each year, but I was afraid that would take away from the general cohesiveness of all the elements put together. Ultimately, I think it worked out but it was challenging for me to figure out how I could make it cohesive.\n\n\nCode\ntimeline &lt;- \n  ggplot(freight_month, aes(x = date, y = total_freight)) +\n  geom_smooth(color = \"#1E3A8A\", size = 1, span = 0.1, se = FALSE) +\n  scale_x_date(date_labels = \"%Y\", date_breaks = \"24 months\") +  \n  scale_y_continuous(\n    labels = scales::label_number(scale = 1e-6, suffix = \"M lb\", big.mark = \",\")  \n  ) +\n  labs(title = \"Pounds of Air-Freight Moved To and From The USA\",\n       x = \"\",\n       y = \"\") +  \n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 12, face = \"bold\", hjust = 0.5),  # Match bump chart title\n    axis.text.x = element_text(size = 10, face = \"bold\"),  \n    axis.text.y = element_text(size = 10, face = \"bold\"),  \n    panel.grid.major.y = element_blank(),  \n    panel.grid.minor.y = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    plot.margin = margin(20, 50, 20, 50)  # Ensure proper spacing\n  ) \n\nprint(timeline)\n\n\n\n\n\n\n\n\n\n\n\n\nThe final visuals\nOnce all those pieces were finished, I used google slides to put to final pieces together.\n\n\n\nThe final product:"
  },
  {
    "objectID": "blog_posts/2024-12-2-thomas-fire-post/thomas_fire_blog_edit.html",
    "href": "blog_posts/2024-12-2-thomas-fire-post/thomas_fire_blog_edit.html",
    "title": "The Great Thomas Fire Analysis: A Tour Of Functions",
    "section": "",
    "text": "Github\nHave you ever dreamed of analyzing a wildfire all by yourself using Python and a handful of functions? Well if you have, today is your lucky day! The goal of this blog post is to give a quick guide on how to do just that so you can make your dream come true or live vicariously through me. First, let’s go over some background on the Thomas Fire that impacted Santa Barbara and the surrounding areas.\nI am going to be doing this in two parts. In the first part, I will be making a graph to visualize how the fire impacted air quality or the AQI. For the second part, I am going to be using false color imagery to get a better picture, or just a picture at least, of the impact the fire had on vegetation in the area. As I mentioned earlier, this post is going to highlight the functions I am going to use,\nAnd the functions are…\n\nConcat()\nRolling()\nTo_file()\nSqueeze()\nImshow()\n\nThroughout this analysis, I will highlight the places where I used the functions, mention the library they are from, and explain, roughly, what they do. In addition to the functions, I will be highlighting the overall skills I will use in each section.\n\n\nThe Thomas Fire was an extremely large wildfire that burned 378,000 acres from December 4th, 2017 to January 12th, 2018. At the time, it was considered the largest wildlife in modern California history. The fire caused massive destruction both from the flames and the subsequent mudslides. It was truly devastating. Hopefully, in learning to do this analysis we can help in finding new ways to mitigate and respond to these disasters.\n\n\n\nI am going to be using three data sets. Each data set should be openly available to use. I will talk more about the data in the sections where I use it."
  },
  {
    "objectID": "blog_posts/2024-12-2-thomas-fire-post/thomas_fire_blog_edit.html#a-sweeping-explanation-of-data-cleaning",
    "href": "blog_posts/2024-12-2-thomas-fire-post/thomas_fire_blog_edit.html#a-sweeping-explanation-of-data-cleaning",
    "title": "The Great Thomas Fire Analysis: A Tour Of Functions",
    "section": "A Sweeping Explanation of Data Cleaning",
    "text": "A Sweeping Explanation of Data Cleaning\nWhen starting a project, I am often struck by how much I do not like the format the data is in. This is something every young data scientist and coder must experience and develop on their own. We all must find a format that calls to us and spend the rest of our coding lives cleaning every data set we get until it is in that format. My personal favorite is lower snake case. It makes sense to me because we say lines of text are like strings, and snakes are the most string-like animals in my opinion.\n\n# Combine the two data sets using pd.concat\naqi = pd.concat([aqi_17, aqi_18], ignore_index=True)\n\n# Format column names into lower snake case\naqi.columns = (aqi.columns\n                  .str.lower()\n                  .str.replace(' ','_')\n                )\n\n# Select the data from Santa Barbara County\naqi_sb = aqi[(aqi['county_name'] == 'Santa Barbara')]\n\n# Select columns of interest\naqi_sb = aqi_sb[['date', 'aqi', 'category', 'defining_parameter', 'defining_site', 'number_of_sites_reporting']]"
  },
  {
    "objectID": "blog_posts/2024-12-2-thomas-fire-post/thomas_fire_blog_edit.html#setting-the-index-as-the-date",
    "href": "blog_posts/2024-12-2-thomas-fire-post/thomas_fire_blog_edit.html#setting-the-index-as-the-date",
    "title": "The Great Thomas Fire Analysis: A Tour Of Functions",
    "section": "Setting the Index As the Date",
    "text": "Setting the Index As the Date\nThe data is being analyzed over time, and setting the date as the index allows for more convenient handling of time-based operations. By changing the index, I am making sure that I and the computer are on the same page beside the webpage.\n\n# Update the `date` column to be datetime object\naqi_sb.date = pd.to_datetime(aqi_sb['date'])\n\n# Update the index to be the `date` column\naqi_sb = aqi_sb.set_index('date')"
  },
  {
    "objectID": "blog_posts/2024-12-2-thomas-fire-post/thomas_fire_blog_edit.html#averaging-the-aqi-over-time",
    "href": "blog_posts/2024-12-2-thomas-fire-post/thomas_fire_blog_edit.html#averaging-the-aqi-over-time",
    "title": "The Great Thomas Fire Analysis: A Tour Of Functions",
    "section": "Averaging The AQI Over Time",
    "text": "Averaging The AQI Over Time\nIn order to be able to see the impact of the fire on air quality, we need to know what the air quality was before.\n\nThe rolling() function\nHere we are using a function called rolling(). What this function does is show how averages change over time. They call them rolling window calculations because they calculate over a “window” of time, and since time is moving the function must be moving too so we say it’s “rolling.” In the code, you may notice we put ‘5D’ in the parathesis, this is specifying what I want the window of time to be. Here I do 5D because I want it to be five days.\n\n\nPlot\nThe result of this analysis is a plot. In regards to AQI, the higher the value, the worse the air quality. There is a spike where December is, which is what I expected because that is when the fire was\n\n# Calculate AQI rolling average over 5 days\nrolling_average = aqi_sb['aqi'].rolling('5D').mean()\n\n# Add mean of AQI over the 5-day rolling window as a new column\naqi_sb['five_day_average'] = rolling_average\n\n# Create a plot of the 5-day rolling average AQI and the daily average AQI\naqi_sb[['aqi', 'five_day_average']].plot(kind='line',\n                                         legend = ['Daily AQI', 'Five Day Average AQI'],\n                                         title=' Daily and 5-day Average AQI In Santa Barbara County', \n                                         ylabel='AQI', \n                                         xlabel='Date',\n                                        )"
  },
  {
    "objectID": "blog_posts/2024-12-2-thomas-fire-post/thomas_fire_blog_edit.html#dropping-bands",
    "href": "blog_posts/2024-12-2-thomas-fire-post/thomas_fire_blog_edit.html#dropping-bands",
    "title": "The Great Thomas Fire Analysis: A Tour Of Functions",
    "section": "Dropping bands",
    "text": "Dropping bands\nI am now going to be working with my Landsat data. I can see when I print the data set that it has an extra band that will not be necessary in this analysis.\n\nThe Squeeze() Function\nThe squeeze() function is from the Numpy library and allows us to get rid of any dimensions with the size of 1. This keeps the data from taking up too much space. It will also help me remove the band so I can replace it with my own band.\n\n# Print to get a general overview of the landsat data\nprint(landsat)\n\n# Remove extra dimensions\nlandsat = landsat.squeeze()\n\n# Drop 'band'\nlandsat = landsat.drop_vars('band')\n\n&lt;xarray.Dataset&gt; Size: 25MB\nDimensions:      (band: 1, x: 870, y: 731)\nCoordinates:\n  * band         (band) int64 8B 1\n  * x            (x) float64 7kB 1.213e+05 1.216e+05 ... 3.557e+05 3.559e+05\n  * y            (y) float64 6kB 3.952e+06 3.952e+06 ... 3.756e+06 3.755e+06\n    spatial_ref  int64 8B 0\nData variables:\n    red          (band, y, x) float64 5MB ...\n    green        (band, y, x) float64 5MB ...\n    blue         (band, y, x) float64 5MB ...\n    nir08        (band, y, x) float64 5MB ...\n    swir22       (band, y, x) float64 5MB ...\n\n\n\n\nPlotting the True Color Image\nThis is where I have replaced the band I dropped earlier with red, green, and blue.\n\n\nThe imshow(robust = True) Function\nThe imshow() function comes from the xarray library and works with a function of the same name from the matplotlib.pyplot. This is a function that shows a 2-D picture. Incorporating the the xarray library makes it extra useful here because I can use the (robust = True) argument to ignore any outlier colors, which creates a more realistic-looking picture.\n\n# Select 'red' 'green' and 'blue' bands\n# Convert to a NumPy array using .to_array()\nlandsat[['red', 'green', 'blue']].to_array().plot.imshow(robust=True)\n\n\n\n\n\n\n\n\n\n\nPlotting The False Color Image\nI used SWIR, NIR, and Green because they can be especially helpful when looking at fires as they show healthy vegetation as bright green.\nEven without the fire perimeter overlayed, it is easy to tell where the fire was based on this false color image. The areas in red are the areas that were burning.\n\n# Select SWIR, NIR, and Red bands and plot false color image\nlandsat[['swir22', 'nir08', 'red']].to_array().plot.imshow(robust=True)"
  },
  {
    "objectID": "blog_posts/2024-12-2-thomas-fire-post/thomas_fire_blog_edit.html#mapping-the-perimeter-and-false-color-image",
    "href": "blog_posts/2024-12-2-thomas-fire-post/thomas_fire_blog_edit.html#mapping-the-perimeter-and-false-color-image",
    "title": "The Great Thomas Fire Analysis: A Tour Of Functions",
    "section": "Mapping the Perimeter and false color image",
    "text": "Mapping the Perimeter and false color image\n\n# Check if thomas_fire and Landsat have matching CRSs\nprint(\"Landsat CRS:\", landsat.rio.crs)\nprint(\"Thomas Fire CRS:\", thomas_fire.crs)\n\n# Reproject thomas_fire to match the CRS of the landsat data if they do not match\nif thomas_fire.crs != landsat.rio.crs:\n    thomas_fire = thomas_fire.to_crs(landsat.rio.crs)\n\nLandsat CRS: EPSG:32611\nThomas Fire CRS: EPSG:3857\n\n\n\nThe Final Map:\n\n# Plot False Color Image\nfig, ax = plt.subplots(figsize=(10, 10))\nlandsat[['swir22', 'nir08', 'red']].to_array().plot.imshow(ax=ax, \n                                                           robust=True, \n                                                           alpha=0.8)\n\n# Plot Thomas Fire perimeter\nthomas_fire.plot(ax=ax, \n                       edgecolor='maroon', \n                       facecolor='none', \n                       linewidth=2)\n\n# Create a custom legend\nfire_legend = mpatches.Patch(edgecolor='maroon', \n                             facecolor='none', \n                             label=\"Thomas Fire Perimeter\")\n\n# Add legend manually\nax.legend(handles=[fire_legend], \n          loc=\"upper right\", \n          fontsize=12)\n\n# Label the map\nax.set_title(\"False Color Image of the 2017 Thomas Fire Perimeter In Santa Barbara County\", fontsize=16)\nax.set_xlabel(\"X Coordinate\")\nax.set_ylabel(\"Y Coordinate\")\n\nplt.show()\n\n\n\n\n\n\n\n\nAnd there you have it. Here is the map with the fire perimeter overlayed. One of the reasons false color imagery can be useful is that it can highlight where vegetation was most affected. We can see that not all the vegetation in the fire perimeter was impacted by the same amount. This can shed light on why fires burn the way they do, which, in turn, can help us with fire management.\nI hope you enjoyed this wordy blog post, and now have a couple more functions under your belt you can use next time you want to analyze a wildfire!"
  },
  {
    "objectID": "blog_posts/2024-12-2-thomas-fire-post/thomas_fire_blog_edit.html#references",
    "href": "blog_posts/2024-12-2-thomas-fire-post/thomas_fire_blog_edit.html#references",
    "title": "The Great Thomas Fire Analysis: A Tour Of Functions",
    "section": "References",
    "text": "References\nAndone, D. (2018, June 2). The largest wildfire in California’s modern history is finally out, more than 6 months after it started. CNN. Retrieved December 2, 2024, from https://www.cnn.com/2018/06/02/us/thomas-fire-officially-out/index.html\nRiebeek, R. (2014, March 4). Why is that Forest Red and that cloud blue? NASA. https://earthobservatory.nasa.gov/features/FalseColor\nU.S. Environmental Protection Agency. (2024, June 20). Particulate matter (PM) basics. EPA. Retrieved December 2, 2024, from https://www.epa.gov/pm-pollution/particulate-matter-pm-basics"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Bren School of Environmental Science & Management\nUniversity of California, Santa Barbara\n\n\n\nCollege of Sciences and Mathematics\nBelmont University, Nashville, TN"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About",
    "section": "",
    "text": "Bren School of Environmental Science & Management\nUniversity of California, Santa Barbara\n\n\n\nCollege of Sciences and Mathematics\nBelmont University, Nashville, TN"
  },
  {
    "objectID": "about.html#professional-experience",
    "href": "about.html#professional-experience",
    "title": "About",
    "section": "Professional Experience",
    "text": "Professional Experience"
  },
  {
    "objectID": "blog_posts.html",
    "href": "blog_posts.html",
    "title": "Blog",
    "section": "",
    "text": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Freight That Flies\n\n\n\n\n\n\nAmanda Overbye\n\n\nMar 15, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nThe Great Thomas Fire Analysis: A Tour Of Functions\n\n\n\nPython\n\n\nMEDS\n\n\nGeospatial\n\n\nWildfire\n\n\n\nAnalyzing the Impact Of the Thomas Fire Using a Handful Of Functions\n\n\n\nAmanda G. Overbye\n\n\nDec 4, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Amanda Overbye",
    "section": "",
    "text": "I’m currently pursuing my Master’s in Environmental Data Science at the Bren School of Environmental Science & Management at UC Santa Barbara. I love finding ways to make environmental data more meaningful and accessible to everyone.\nI aspire to be a data analyst with a special focus on ecology, particularly studying how climate change and human activities affect wildlife movement and migration patterns over time. In addition to research, I’m passionate about teaching and communicating data to diverse audiences—making complex environmental information understandable and useful for everyone.\nFeel free to explore my website and learn more about me and my work. Thanks for stopping by!"
  },
  {
    "objectID": "index.html#hi-im-amanda",
    "href": "index.html#hi-im-amanda",
    "title": "Amanda Overbye",
    "section": "",
    "text": "I’m currently pursuing my Master’s in Environmental Data Science at the Bren School of Environmental Science & Management at UC Santa Barbara. I love finding ways to make environmental data more meaningful and accessible to everyone.\nI aspire to be a data analyst with a special focus on ecology, particularly studying how climate change and human activities affect wildlife movement and migration patterns over time. In addition to research, I’m passionate about teaching and communicating data to diverse audiences—making complex environmental information understandable and useful for everyone.\nFeel free to explore my website and learn more about me and my work. Thanks for stopping by!"
  },
  {
    "objectID": "blog_posts/2024-13-2024-WNV_cases_in_LA/la_wnv_analysis.html",
    "href": "blog_posts/2024-13-2024-WNV_cases_in_LA/la_wnv_analysis.html",
    "title": "Analyzing the Relationship Between Rainfall and West Nile Virus Cases in LA County",
    "section": "",
    "text": "West Nile Virus (WNV) is the most common mosquito-transmitted virus in the United States. It is primarily spread through the bite of infected mosquitoes. Although most people who get infected with the virus experience mild symptoms, approximately 1 in 5 individuals will develop symptoms such as fever, headache, vomiting, or a rash (CDC, 2024). In rare cases, about 1 in 150 infected individuals will develop more serious conditions, such as encephalitis or meningitis, which can be life-threatening (CDC, 2024).\n\n\n\nPast studies suggest that weather patterns, specifically rainfall and temperature, can influence the incidence of WNV cases. Heavy rainfall, in particular, has been linked to an increase in the number of reported cases. For example, past research (Soverow et al., 2009) has shown that rainfall within a week can be associated with a 29–66% increase in the incidence of WNV in the following weeks. However, other studies indicate that temperature may be a stronger predictor than rainfall in determining the risk of infection (Shand et al., 2016).\nSomething of note in the Shand et al. paper is that they were looking at infection rates of mosquitoes, as opposed to human infections. With this, there may be different results because WNV so often does not have noticeable symptoms in people, there probably are more people infected than can be accounted for. Shand et. al. used a statistical linear regression with information about past weather events. In some models, they also used lagged previous infection cases as an independent variable to help predict future infections. Soverow, et al. used a conditional logistic regression in their analysis and also found results that even heavy rainfall within the past week can lead to higher WNV cases.\nFor this analysis, I decided to focus on Los Angeles County and analyze whether recent rainfall patterns correlate with WNV cases over 10 years from 2013 to 2023.\nNull Hypothesis (H₀): There is no relationship between precipitation and reported WNV cases.\nAlternative Hypothesis (H₁): Higher levels of rainfall will be associated with more reported WNV cases.\n\n\n\nThe data for this analysis comes from two sources:\nWest Nile Virus Cases: Reported by the California Department of Public Health, covering 2006 to 2024. https://data.chhs.ca.gov/dataset/west-nile-virus-cases-2006-present\nRainfall Data: Rainfall data for Arcadia, a city in LA County. This data was requested from NOAAs Climate Data Online: Dataset Discovery portal. https://www.ncei.noaa.gov/cdo-web/\n\n\n\n\n\nCode\n# Load in libraries\nlibrary(tidyverse)\nlibrary(here)\nlibrary(dplyr)\nlibrary(janitor)\nlibrary(lubridate)\n\n\n\n\nCode\n# Read in data\nwnv_cases &lt;- read_csv(here('blog_posts', '2024-13-2024-WNV_cases_in_LA', 'data', 'vendor.csv'))\narcadia &lt;- read_csv(here('blog_posts', '2024-13-2024-WNV_cases_in_LA', 'data', '3862608.csv'))\n\n\n\n\n\n\n\nRenaming Columns: Standardized column names for easier manipulation.\n\n\nCode\nwnv_cases &lt;- wnv_cases %&gt;% \n  rename(\n    year = 'Year', \n    week = 'Week', \n    county = 'County', \n    reported_positive_cases = 'Reported Positive Cases'\n  )\n\n\nFiltering Data: Focused analysis on Los Angeles County (2013–2023).\n\n\nCode\n# Filter for years and county\nwnv_cases_la &lt;- wnv_cases %&gt;% \n  filter(county == \"Los Angeles\", year &gt;= 2013, year &lt;= 2023)\n\n\n\n\n\nDate Processing: Extracted year and week number from daily rainfall data.\n\n\nCode\n# Extract week number \narcadia &lt;- arcadia %&gt;%\n  mutate(week = isoweek(DATE), year = year(DATE))\n\n\nWeekly Averages: Calculated average rainfall for each week.\n\n\nCode\n# Calculate average rainfall for week\narcadia_avg &lt;- arcadia %&gt;% \n  group_by(year, week) %&gt;% \n  summarize(avg_weekly_prcp = mean(PRCP, na.rm = TRUE))\n\n\n\n\n\n\nMerged rainfall and WNV cases data by year and week.\nMissing weeks in the WNV dataset were filled with 0 cases, assuming no cases were reported in those weeks.\n\n\n\nCode\n# Merge rainfall and WNV cases by year and week and make missing weeks 0\nwnv_precip &lt;- full_join(wnv_cases_la, arcadia_avg, by = c(\"year\", \"week\")) %&gt;% \n  mutate(\n    reported_positive_cases = replace_na(reported_positive_cases, 0),\n    county = replace_na(county, \"Los Angeles\")\n  )\n\n\n\n\n\n\n\n\nCode\nggplot(wnv_cases_la, aes(x = week, y = reported_positive_cases)) +\n  geom_smooth(method = \"lm\", color = \"navy\", se = FALSE) + \n  geom_point(color = \"firebrick\") +\n  theme_minimal() +\n  labs(\n    title = \"Reported West Nile Virus Cases by Week in Los Angeles County\",\n    x = \"Week of the Year\",\n    y = \"Number of Reported Cases\"\n  )\n\n\n\n\n\n\n\n\n\nExplanation Of Graph\nThis graph shows the number of reported cases of WNV throughout the ten year period. There was a spike in WNV cases in 2017 in LA County with 268 infections (up from 153 in 2016) and 27 deaths (up from 6 in 2016)(LACDPH, 2018). Before 2017, 2015 had been the most fatal year for WNV with 24 deaths (). The spike in cases happened in October, 2017 and with the most cases being reported week 41 (7. Oct - 13. Oct).\n1. Trends in Rainfall and WNV Cases\nVisualized weekly rainfall and WNV cases over time, grouped by year.\n\n\nCode\nggplot(wnv_precip, aes(x = week, group = year)) +\n  geom_line(aes(y = avg_weekly_prcp, color = \"Rainfall\"), size = 1) +\n  geom_line(aes(y = reported_positive_cases, color = \"WNV Cases\"), size = 1) +\n  facet_wrap(~ year) +\n  labs(\n    x = \"Week\",\n    y = \"Values\",\n    title = \"Weekly Rainfall and West Nile Virus Cases\",\n    color = \"Legend\"\n  ) +\n  scale_color_manual(values = c(\"Rainfall\" = \"navy\", \"WNV Cases\" = \"firebrick\")) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nExplanation Of Graph\nThis graph shows the amount of rainfall and the number of WNV cases per year. These graphs also show the spike in cases in 2017. Some experts attributed this spike in cases to an unusually wet winter (CDPH, 2017).\n\n\nCode\n# Filter the data for 2017\nwnv_precip_2017 &lt;- wnv_precip %&gt;% \n  filter(year == 2017)\n\n\n\n\nCode\n# Plot the graph for 2017\nggplot(wnv_precip_2017, aes(x = week, group = year)) +\n  geom_line(aes(y = avg_weekly_prcp, color = \"Rainfall\"), size = 1) +\n  geom_line(aes(y = reported_positive_cases, color = \"WNV Cases\"), size = 1) +\n  labs(\n    x = \"Week\",\n    y = \"Values\",\n    title = \"Weekly Rainfall and West Nile Virus Cases in 2017\",\n    color = \"Legend\"\n  ) +\n  scale_color_manual(values = c(\"Rainfall\" = \"navy\", \"WNV Cases\" = \"firebrick\")) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nThis zoomed in graph of 2017 shows the slight spike in precipitation at the beginning of the year.\n2. Autocorrelation of WNV Cases\nComputed the autocorrelation function (ACF) to determine if WNV cases exhibit temporal dependencies.\n\n\nCode\nacf(wnv_precip$reported_positive_cases, na.action = na.pass, main = \"ACF of WNV Cases\")\n\n\n\n\n\n\n\n\n\nExplanation of Graph\nI wanted to include an autocorrelation graph in this analysis because WNV is spread by vectors, and because WNV cases tend to spite in the summer and fall months. The spikes on the far left of this graph are consistent with what would be expected of a virus with seasonal spikes. This graph shows that WNV cases are often reported within a few weeks of each other, particularly within 5 weeks. These results are as-expected.\n\n\nCode\n# Fit a linear model between rainfall and WNV cases\nrain_case_model &lt;- lm(reported_positive_cases ~ avg_weekly_prcp, data = wnv_precip)\n\n# Summary of the model to check coefficients and significance\nsummary(rain_case_model)\n\n\n\nCall:\nlm(formula = reported_positive_cases ~ avg_weekly_prcp, data = wnv_precip)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-2.411 -2.411 -2.395 -1.383 37.589 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       2.4113     0.2507   9.618   &lt;2e-16 ***\navg_weekly_prcp  -1.3915     1.2687  -1.097    0.273    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.633 on 547 degrees of freedom\n  (35 observations deleted due to missingness)\nMultiple R-squared:  0.002194,  Adjusted R-squared:  0.0003703 \nF-statistic: 1.203 on 1 and 547 DF,  p-value: 0.2732\n\n\nSummary Analysis\nWe can see that according to our p-value (p = 0.2732), these results are not significant and that, in this case, precipitation is not a significant predictor of WNV cases. Our intercept is 2.4113 which means that when there is no rainfall, the model predicts about 2.41 reported WNV cases. Unexpectedly, with our avg_weekly_prcp coefficient being -1.3915, this model would predict that for each inch of rainfall there would be -1.3915 cases of WNV. The Multiple R-squared (0.002194) also supports these results being insignificant, as it describes only 0.22% of WNV case variation could be explained by precipitation.\n\n\nCode\n# Calculate the correlation between rainfall and WNV cases\ncorrelation &lt;- cor(wnv_precip$avg_weekly_prcp, wnv_precip$reported_positive_cases, use = \"complete.obs\")\nprint(paste(\"Correlation between rainfall and WNV cases:\", correlation))\n\n\n[1] \"Correlation between rainfall and WNV cases: -0.0468444447379296\"\n\n\nThis correlation (-0.0468) is consistent with our previous findings that rainfall would have a negative correlation with WNV cases.\n\n\nCode\n# Visualize the relationship with the regression line\nggplot(wnv_precip, aes(x = avg_weekly_prcp, y = reported_positive_cases)) +\n  geom_point(color = \"firebrick\") + \n  geom_smooth(method = \"glm\", color = \"navy\", se = FALSE) +\n  labs(\n    title = \"Relationship Between Rainfall and West Nile Virus Cases\",\n    x = \"Average Weekly Rainfall (inches)\",\n    y = \"Reported Positive WNV Cases\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\nSo far, the analysis has shown unexpected results that are inconsistent with the results from prior research, except for the autocorrelation function. I thought lagging the rainfall variable may show results more consistent with the papers.\n1. Lagged Variables\nCreated a lagged rainfall variable to explore delayed effects of precipitation on WNV cases.\n\n\nCode\nwnv_precip &lt;- wnv_precip %&gt;% \n  mutate(lag_prcp_4weeks = lag(avg_weekly_prcp, 4))\n\n\n2. Correlation Analysis\nExamined the correlation between rainfall 4 weeks prior and WNV cases.\n\n\nCode\ncorrelation &lt;- cor(wnv_precip$lag_prcp_4weeks, wnv_precip$reported_positive_cases, use = \"complete.obs\")\nprint(paste(\"Correlation between rainfall 4 weeks ago and WNV cases:\", correlation))\n\n\n[1] \"Correlation between rainfall 4 weeks ago and WNV cases: -0.0669666699724962\"\n\n\n3. Regression Analysis\nFitted a linear model to quantify the relationship between lagged rainfall and WNV cases.\n\n\nCode\nmodel &lt;- lm(reported_positive_cases ~ lag_prcp_4weeks, data = wnv_precip)\nsummary(model)\n\n\n\nCall:\nlm(formula = reported_positive_cases ~ lag_prcp_4weeks, data = wnv_precip)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-2.460 -2.460 -2.436 -1.199 37.540 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       2.4597     0.2579   9.536   &lt;2e-16 ***\nlag_prcp_4weeks  -2.0339     1.3005  -1.564    0.118    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.773 on 543 degrees of freedom\n  (39 observations deleted due to missingness)\nMultiple R-squared:  0.004485,  Adjusted R-squared:  0.002651 \nF-statistic: 2.446 on 1 and 543 DF,  p-value: 0.1184\n\n\nIn a very generous sense, using the lagged variable did show results that were slightly more like those in the research paper. However, the results are still completely different. With the lagged variable, the p-value is still not significant (p = 0.1184). The coefficient for the intercept did go up slightly, with the difference being 0.0484. Our lag_prcp_4weeks coefficient being -2.0339 means that for every inch of rain in the past 4 weeks, there would be -2.03 WNV cases. Lastly, we can see only about 0.45% of the variability in reported WNV cases can be explained by lagged precipitation.\n4. Visualization of Regression\nVisualized the relationship between lagged rainfall and WNV cases.\n\n\nCode\nggplot(wnv_precip, aes(x = lag_prcp_4weeks, y = reported_positive_cases)) +\n  geom_point() +\n  geom_smooth(method = \"glm\", color = \"navy\", se = FALSE) +\n  labs(\n    title = \"Relationship Between Rainfall (4 Weeks Ago) and WNV Cases\",\n    x = \"Average Weekly Rainfall (4 Weeks Ago)\",\n    y = \"Reported Positive WNV Cases\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nContrary to initial expectations, the data failed to demonstrate a statistically significant relationship between rainfall and West Nile Virus cases. The negative correlation and elevated p-values suggest that precipitation alone may not be a reliable predictor of virus transmission in Los Angeles County. In this analysis, I have failed to reject the null hypothesis.\nThere are several reasons that could account for these surprising results.\n\nSmall sample size I was only looking at cases in LA County, both of the studies I referenced earlier had much larger samples to analyze.\nLack of precipitation LA County is a notoriously sunny area, it tends to get very little precipitation year round.\nThere is an omitted variable bias. A stronger correlation to temperature Again, referencing back to the studies mentioned earlier, both showed more of a relationship between temperature and the number of reported cases than precipitation. My analysis omitted these variables because the Arcadia data set I used only had data about precipitation.\n\nReferences\nCalifornia Department of Public Health (CDPH). (2017, April 28). CDPH confirms first human West Nile virus illness of 2017 (No. 17-043). California Department of Public Health. https://www.cdph.ca.gov/Programs/OPA/Pages/NR17-043.aspx\nCenters for Disease Control and Prevention. (2024, May 15). About West Nile virus. Centers for Disease Control and Prevention. https://www.cdc.gov/west-nile-virus/about/index.html\nLos Angeles County Department of Public Health (LACDPH). (2018, May 1). West Nile virus and other arboviral diseases: 2017 Los Angeles County Epidemiology Final Report. Los Angeles County Department of Public Health. https://publichealth.lacounty.gov/acd/docs/Arbo2017.pdf\nShand, L., Brown, W. M., Chaves, L. F., Goldberg, T. L., Hamer, G. L., Haramis, L., Kitron, U., Walker, E. D., & Ruiz, M. O. (2016). Predicting West Nile virus infection risk from the synergistic effects of rainfall and temperature. Journal of Medical Entomology, 53(4), 1–10. https://doi.org/10.1093/jme/tjw042\nSoverow, J. E., Wellenius, G. A., Fisman, D. N., & Mittleman, M. A. (2009). Infectious disease in a warming world: How weather influenced West Nile Virus in the United States (2001–2005). Environmental Health Perspectives, 117(7), 1049–1052. https://doi.org/10.1289/ehp.0800487"
  },
  {
    "objectID": "blog_posts/2024-13-2024-WNV_cases_in_LA/la_wnv_analysis.html#west-nile-cases-in-california-is-recent-rain-or-old-rain-a-better-predictor",
    "href": "blog_posts/2024-13-2024-WNV_cases_in_LA/la_wnv_analysis.html#west-nile-cases-in-california-is-recent-rain-or-old-rain-a-better-predictor",
    "title": "Analyzing the Relationship Between Rainfall and West Nile Virus Cases in LA County",
    "section": "",
    "text": "Code\n# Load in libraries\nlibrary(tidyverse)\nlibrary(here)\nlibrary(dplyr)\nlibrary(janitor)\nlibrary(lubridate)\n\n\n\n\nCode\n# Read in data\nwnv_cases &lt;- read_csv(here('blog_posts', '2024-13-2024-WNV_cases_in_LA', 'data', 'vendor.csv'))\narcadia &lt;- read_csv(here('blog_posts', '2024-13-2024-WNV_cases_in_LA', 'data', '3862608.csv'))"
  },
  {
    "objectID": "blog_posts/2024-13-2024-WNV_cases_in_LA/la_wnv_analysis.html#data-cleaning-and-preparation",
    "href": "blog_posts/2024-13-2024-WNV_cases_in_LA/la_wnv_analysis.html#data-cleaning-and-preparation",
    "title": "Analyzing the Relationship Between Rainfall and West Nile Virus Cases in LA County",
    "section": "",
    "text": "Renaming Columns: Standardized column names for easier manipulation.\n\n\nCode\nwnv_cases &lt;- wnv_cases %&gt;% \n  rename(\n    year = 'Year', \n    week = 'Week', \n    county = 'County', \n    reported_positive_cases = 'Reported Positive Cases'\n  )\n\n\nFiltering Data: Focused analysis on Los Angeles County (2013–2023).\n\n\nCode\n# Filter for years and county\nwnv_cases_la &lt;- wnv_cases %&gt;% \n  filter(county == \"Los Angeles\", year &gt;= 2013, year &lt;= 2023)\n\n\n\n\n\nDate Processing: Extracted year and week number from daily rainfall data.\n\n\nCode\n# Extract week number \narcadia &lt;- arcadia %&gt;%\n  mutate(week = isoweek(DATE), year = year(DATE))\n\n\nWeekly Averages: Calculated average rainfall for each week.\n\n\nCode\n# Calculate average rainfall for week\narcadia_avg &lt;- arcadia %&gt;% \n  group_by(year, week) %&gt;% \n  summarize(avg_weekly_prcp = mean(PRCP, na.rm = TRUE))\n\n\n\n\n\n\nMerged rainfall and WNV cases data by year and week.\nMissing weeks in the WNV dataset were filled with 0 cases, assuming no cases were reported in those weeks.\n\n\n\nCode\n# Merge rainfall and WNV cases by year and week and make missing weeks 0\nwnv_precip &lt;- full_join(wnv_cases_la, arcadia_avg, by = c(\"year\", \"week\")) %&gt;% \n  mutate(\n    reported_positive_cases = replace_na(reported_positive_cases, 0),\n    county = replace_na(county, \"Los Angeles\")\n  )"
  },
  {
    "objectID": "blog_posts/2024-13-2024-WNV_cases_in_LA/la_wnv_analysis.html#exploratory-data-analysis",
    "href": "blog_posts/2024-13-2024-WNV_cases_in_LA/la_wnv_analysis.html#exploratory-data-analysis",
    "title": "Analyzing the Relationship Between Rainfall and West Nile Virus Cases in LA County",
    "section": "",
    "text": "Code\nggplot(wnv_cases_la, aes(x = week, y = reported_positive_cases)) +\n  geom_smooth(method = \"lm\", color = \"navy\", se = FALSE) + \n  geom_point(color = \"firebrick\") +\n  theme_minimal() +\n  labs(\n    title = \"Reported West Nile Virus Cases by Week in Los Angeles County\",\n    x = \"Week of the Year\",\n    y = \"Number of Reported Cases\"\n  )\n\n\n\n\n\n\n\n\n\nExplanation Of Graph\nThis graph shows the number of reported cases of WNV throughout the ten year period. There was a spike in WNV cases in 2017 in LA County with 268 infections (up from 153 in 2016) and 27 deaths (up from 6 in 2016)(LACDPH, 2018). Before 2017, 2015 had been the most fatal year for WNV with 24 deaths (). The spike in cases happened in October, 2017 and with the most cases being reported week 41 (7. Oct - 13. Oct).\n1. Trends in Rainfall and WNV Cases\nVisualized weekly rainfall and WNV cases over time, grouped by year.\n\n\nCode\nggplot(wnv_precip, aes(x = week, group = year)) +\n  geom_line(aes(y = avg_weekly_prcp, color = \"Rainfall\"), size = 1) +\n  geom_line(aes(y = reported_positive_cases, color = \"WNV Cases\"), size = 1) +\n  facet_wrap(~ year) +\n  labs(\n    x = \"Week\",\n    y = \"Values\",\n    title = \"Weekly Rainfall and West Nile Virus Cases\",\n    color = \"Legend\"\n  ) +\n  scale_color_manual(values = c(\"Rainfall\" = \"navy\", \"WNV Cases\" = \"firebrick\")) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nExplanation Of Graph\nThis graph shows the amount of rainfall and the number of WNV cases per year. These graphs also show the spike in cases in 2017. Some experts attributed this spike in cases to an unusually wet winter (CDPH, 2017).\n\n\nCode\n# Filter the data for 2017\nwnv_precip_2017 &lt;- wnv_precip %&gt;% \n  filter(year == 2017)\n\n\n\n\nCode\n# Plot the graph for 2017\nggplot(wnv_precip_2017, aes(x = week, group = year)) +\n  geom_line(aes(y = avg_weekly_prcp, color = \"Rainfall\"), size = 1) +\n  geom_line(aes(y = reported_positive_cases, color = \"WNV Cases\"), size = 1) +\n  labs(\n    x = \"Week\",\n    y = \"Values\",\n    title = \"Weekly Rainfall and West Nile Virus Cases in 2017\",\n    color = \"Legend\"\n  ) +\n  scale_color_manual(values = c(\"Rainfall\" = \"navy\", \"WNV Cases\" = \"firebrick\")) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nThis zoomed in graph of 2017 shows the slight spike in precipitation at the beginning of the year.\n2. Autocorrelation of WNV Cases\nComputed the autocorrelation function (ACF) to determine if WNV cases exhibit temporal dependencies.\n\n\nCode\nacf(wnv_precip$reported_positive_cases, na.action = na.pass, main = \"ACF of WNV Cases\")\n\n\n\n\n\n\n\n\n\nExplanation of Graph\nI wanted to include an autocorrelation graph in this analysis because WNV is spread by vectors, and because WNV cases tend to spite in the summer and fall months. The spikes on the far left of this graph are consistent with what would be expected of a virus with seasonal spikes. This graph shows that WNV cases are often reported within a few weeks of each other, particularly within 5 weeks. These results are as-expected.\n\n\nCode\n# Fit a linear model between rainfall and WNV cases\nrain_case_model &lt;- lm(reported_positive_cases ~ avg_weekly_prcp, data = wnv_precip)\n\n# Summary of the model to check coefficients and significance\nsummary(rain_case_model)\n\n\n\nCall:\nlm(formula = reported_positive_cases ~ avg_weekly_prcp, data = wnv_precip)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-2.411 -2.411 -2.395 -1.383 37.589 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       2.4113     0.2507   9.618   &lt;2e-16 ***\navg_weekly_prcp  -1.3915     1.2687  -1.097    0.273    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.633 on 547 degrees of freedom\n  (35 observations deleted due to missingness)\nMultiple R-squared:  0.002194,  Adjusted R-squared:  0.0003703 \nF-statistic: 1.203 on 1 and 547 DF,  p-value: 0.2732\n\n\nSummary Analysis\nWe can see that according to our p-value (p = 0.2732), these results are not significant and that, in this case, precipitation is not a significant predictor of WNV cases. Our intercept is 2.4113 which means that when there is no rainfall, the model predicts about 2.41 reported WNV cases. Unexpectedly, with our avg_weekly_prcp coefficient being -1.3915, this model would predict that for each inch of rainfall there would be -1.3915 cases of WNV. The Multiple R-squared (0.002194) also supports these results being insignificant, as it describes only 0.22% of WNV case variation could be explained by precipitation.\n\n\nCode\n# Calculate the correlation between rainfall and WNV cases\ncorrelation &lt;- cor(wnv_precip$avg_weekly_prcp, wnv_precip$reported_positive_cases, use = \"complete.obs\")\nprint(paste(\"Correlation between rainfall and WNV cases:\", correlation))\n\n\n[1] \"Correlation between rainfall and WNV cases: -0.0468444447379296\"\n\n\nThis correlation (-0.0468) is consistent with our previous findings that rainfall would have a negative correlation with WNV cases.\n\n\nCode\n# Visualize the relationship with the regression line\nggplot(wnv_precip, aes(x = avg_weekly_prcp, y = reported_positive_cases)) +\n  geom_point(color = \"firebrick\") + \n  geom_smooth(method = \"glm\", color = \"navy\", se = FALSE) +\n  labs(\n    title = \"Relationship Between Rainfall and West Nile Virus Cases\",\n    x = \"Average Weekly Rainfall (inches)\",\n    y = \"Reported Positive WNV Cases\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "blog_posts/2024-13-2024-WNV_cases_in_LA/la_wnv_analysis.html#modeling-the-relationship-between-rainfall-and-wnv-cases",
    "href": "blog_posts/2024-13-2024-WNV_cases_in_LA/la_wnv_analysis.html#modeling-the-relationship-between-rainfall-and-wnv-cases",
    "title": "Analyzing the Relationship Between Rainfall and West Nile Virus Cases in LA County",
    "section": "",
    "text": "So far, the analysis has shown unexpected results that are inconsistent with the results from prior research, except for the autocorrelation function. I thought lagging the rainfall variable may show results more consistent with the papers.\n1. Lagged Variables\nCreated a lagged rainfall variable to explore delayed effects of precipitation on WNV cases.\n\n\nCode\nwnv_precip &lt;- wnv_precip %&gt;% \n  mutate(lag_prcp_4weeks = lag(avg_weekly_prcp, 4))\n\n\n2. Correlation Analysis\nExamined the correlation between rainfall 4 weeks prior and WNV cases.\n\n\nCode\ncorrelation &lt;- cor(wnv_precip$lag_prcp_4weeks, wnv_precip$reported_positive_cases, use = \"complete.obs\")\nprint(paste(\"Correlation between rainfall 4 weeks ago and WNV cases:\", correlation))\n\n\n[1] \"Correlation between rainfall 4 weeks ago and WNV cases: -0.0669666699724962\"\n\n\n3. Regression Analysis\nFitted a linear model to quantify the relationship between lagged rainfall and WNV cases.\n\n\nCode\nmodel &lt;- lm(reported_positive_cases ~ lag_prcp_4weeks, data = wnv_precip)\nsummary(model)\n\n\n\nCall:\nlm(formula = reported_positive_cases ~ lag_prcp_4weeks, data = wnv_precip)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-2.460 -2.460 -2.436 -1.199 37.540 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       2.4597     0.2579   9.536   &lt;2e-16 ***\nlag_prcp_4weeks  -2.0339     1.3005  -1.564    0.118    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.773 on 543 degrees of freedom\n  (39 observations deleted due to missingness)\nMultiple R-squared:  0.004485,  Adjusted R-squared:  0.002651 \nF-statistic: 2.446 on 1 and 543 DF,  p-value: 0.1184\n\n\nIn a very generous sense, using the lagged variable did show results that were slightly more like those in the research paper. However, the results are still completely different. With the lagged variable, the p-value is still not significant (p = 0.1184). The coefficient for the intercept did go up slightly, with the difference being 0.0484. Our lag_prcp_4weeks coefficient being -2.0339 means that for every inch of rain in the past 4 weeks, there would be -2.03 WNV cases. Lastly, we can see only about 0.45% of the variability in reported WNV cases can be explained by lagged precipitation.\n4. Visualization of Regression\nVisualized the relationship between lagged rainfall and WNV cases.\n\n\nCode\nggplot(wnv_precip, aes(x = lag_prcp_4weeks, y = reported_positive_cases)) +\n  geom_point() +\n  geom_smooth(method = \"glm\", color = \"navy\", se = FALSE) +\n  labs(\n    title = \"Relationship Between Rainfall (4 Weeks Ago) and WNV Cases\",\n    x = \"Average Weekly Rainfall (4 Weeks Ago)\",\n    y = \"Reported Positive WNV Cases\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nContrary to initial expectations, the data failed to demonstrate a statistically significant relationship between rainfall and West Nile Virus cases. The negative correlation and elevated p-values suggest that precipitation alone may not be a reliable predictor of virus transmission in Los Angeles County. In this analysis, I have failed to reject the null hypothesis.\nThere are several reasons that could account for these surprising results.\n\nSmall sample size I was only looking at cases in LA County, both of the studies I referenced earlier had much larger samples to analyze.\nLack of precipitation LA County is a notoriously sunny area, it tends to get very little precipitation year round.\nThere is an omitted variable bias. A stronger correlation to temperature Again, referencing back to the studies mentioned earlier, both showed more of a relationship between temperature and the number of reported cases than precipitation. My analysis omitted these variables because the Arcadia data set I used only had data about precipitation.\n\nReferences\nCalifornia Department of Public Health (CDPH). (2017, April 28). CDPH confirms first human West Nile virus illness of 2017 (No. 17-043). California Department of Public Health. https://www.cdph.ca.gov/Programs/OPA/Pages/NR17-043.aspx\nCenters for Disease Control and Prevention. (2024, May 15). About West Nile virus. Centers for Disease Control and Prevention. https://www.cdc.gov/west-nile-virus/about/index.html\nLos Angeles County Department of Public Health (LACDPH). (2018, May 1). West Nile virus and other arboviral diseases: 2017 Los Angeles County Epidemiology Final Report. Los Angeles County Department of Public Health. https://publichealth.lacounty.gov/acd/docs/Arbo2017.pdf\nShand, L., Brown, W. M., Chaves, L. F., Goldberg, T. L., Hamer, G. L., Haramis, L., Kitron, U., Walker, E. D., & Ruiz, M. O. (2016). Predicting West Nile virus infection risk from the synergistic effects of rainfall and temperature. Journal of Medical Entomology, 53(4), 1–10. https://doi.org/10.1093/jme/tjw042\nSoverow, J. E., Wellenius, G. A., Fisman, D. N., & Mittleman, M. A. (2009). Infectious disease in a warming world: How weather influenced West Nile Virus in the United States (2001–2005). Environmental Health Perspectives, 117(7), 1049–1052. https://doi.org/10.1289/ehp.0800487"
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "",
    "text": "Github repsitory\nThis notebook performs an analysis of the Biodiversity Intactness Index (BII) for Maricopa County (Phoenix) by comparing BII values in 2017 and 2020. We use the io-biodiversity dataset provided by Impact Observatory and Vizzuality and clip it to the boundary of Maricopa County."
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#setup-and-libraries",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#setup-and-libraries",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "1. Setup and Libraries",
    "text": "1. Setup and Libraries\n\nimport pandas as pd\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches\nfrom matplotlib import colors\nimport xarray as xr\nimport rioxarray as rioxr\nimport geopandas as gpd\nimport pystac_client\nimport planetary_computer\nimport contextily as cx\nfrom pystac_client import Client  # To access STAC catalogs\nimport planetary_computer  # To sign items from the MPC STAC catalog \nfrom IPython.display import Image  # To nicely display images"
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#load-subdivision-shapefile",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#load-subdivision-shapefile",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "2. Load Subdivision Shapefile",
    "text": "2. Load Subdivision Shapefile\nI will begin by loading the shapefile for subdivisions in Arizona, which provides the census tract boundaries at a finer geographical scale (county subdivisions). This data will be used to filter for Maricopa County later. I am also going to print the head of the file, so that I can see the exact data the file contains.\n\n# Load subdivision shapefile (county subdivisions for Arizona)\nsubdivision = gpd.read_file('data/subdivision/tl_2024_04_cousub.shp')\n\n# Print first few rows to check the data\nprint(subdivision.head())\n\n  STATEFP COUNTYFP COUSUBFP  COUSUBNS       GEOID              GEOIDFQ  \\\n0      04      005    91198  01934931  0400591198  0600000US0400591198   \n1      04      005    91838  01934953  0400591838  0600000US0400591838   \n2      04      005    91683  01934950  0400591683  0600000US0400591683   \n3      04      023    92295  01934961  0402392295  0600000US0402392295   \n4      04      023    92550  01934966  0402392550  0600000US0402392550   \n\n             NAME            NAMELSAD LSAD CLASSFP  MTFCC FUNCSTAT  \\\n0       Flagstaff       Flagstaff CCD   22      Z5  G4040        S   \n1  Kaibab Plateau  Kaibab Plateau CCD   22      Z5  G4040        S   \n2        Hualapai        Hualapai CCD   22      Z5  G4040        S   \n3         Nogales         Nogales CCD   22      Z5  G4040        S   \n4       Patagonia       Patagonia CCD   22      Z5  G4040        S   \n\n         ALAND    AWATER     INTPTLAT      INTPTLON  \\\n0  12231962349  44576380  +35.1066122  -111.3662507   \n1   7228864156  29327221  +36.5991097  -112.1368033   \n2   2342313339   3772690  +35.9271665  -113.1170408   \n3   1762339489   2382710  +31.4956020  -111.0171332   \n4   1439560139    685527  +31.5664619  -110.6410279   \n\n                                            geometry  \n0  POLYGON ((-112.13370 35.85596, -112.13368 35.8...  \n1  POLYGON ((-112.66039 36.53941, -112.66033 36.5...  \n2  POLYGON ((-113.35416 36.04097, -113.35416 36.0...  \n3  POLYGON ((-111.36692 31.52136, -111.36316 31.5...  \n4  POLYGON ((-110.96273 31.68695, -110.96251 31.6..."
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#filter-for-maricopa-county-phoenix-area",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#filter-for-maricopa-county-phoenix-area",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "3. Filter for Maricopa County (Phoenix Area)",
    "text": "3. Filter for Maricopa County (Phoenix Area)\nHere I am going to filter the subdivisions to isolate the ones corresponding to Maricopa County. Since the data contains census tracts for the entire state of Arizona, we can focus only on the Phoenix area.\n\n# Filter for Maricopa County (Phoenix area)\nmaricopa = subdivision[subdivision['NAME'] == \"Phoenix\"]"
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#access-stac-catalog-and-biodiversity-data",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#access-stac-catalog-and-biodiversity-data",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "4. Access STAC Catalog and Biodiversity Data",
    "text": "4. Access STAC Catalog and Biodiversity Data\nNext, I am going connect to the STAC catalog from the Microsoft Planetary Computer. This catalog contains a dataset on global biodiversity intactness for the years 2017 to 2020. This step is going to go to the active, online dataset to retrieve the data. After that, I am going to view information about the data set so I know where to go next.\n\n# Access the STAC catalog for biodiversity data\ncatalog = Client.open(\n    \"https://planetarycomputer.microsoft.com/api/stac/v1\",\n    modifier=planetary_computer.sign_inplace,\n)\n\n# Access the 'io-biodiversity' collection\nbiodiversity = catalog.get_child('io-biodiversity')\n\n\nData Exploration\nI can tell from reading the description of the data that this data set covers biodiversity intactness. It describes the two componantws it uses to calculate biodiversity intactness as abundance and Compositional Similarity. So basically how many indivudals there are and how similar the composition of species in the area is compared to what is expected from information from the past. I can also see the resolution is 100m."
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#defining-the-temporal-and-geographic",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#defining-the-temporal-and-geographic",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "5. Defining the Temporal And Geographic",
    "text": "5. Defining the Temporal And Geographic\nThis is where I am going to get the biodiversity data for 2020 and 2017. Here I am first giving the coordinates for the area I want (Pheonix) then I am giving it the time frames I want for each data set.\n\n# Pheonix bounding box \nbbox = {\n    \"type\": \"Polygon\",\n    \"coordinates\": [\n        [\n            [-112.826843, 32.974108],  # Bottom-left corner\n            [-112.826843, 33.863574],  # Top-left corner\n            [-111.184387, 33.863574],  # Top-right corner\n            [-111.184387, 32.974108],  # Bottom-right corner\n            [-112.826843, 32.974108],  # Closing the polygon\n        ]\n    ],\n}\n    \n    \n# Define time range for 2020 and 2017\ntime_range_2020 = \"2020-01-01/2020-12-31\"\ntime_range_2017 = \"2017-01-01/2017-12-31\""
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#catalog-search-and-retrieve-data-for-2020-and-2017",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#catalog-search-and-retrieve-data-for-2020-and-2017",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "6. Catalog Search and Retrieve Data for 2020 and 2017",
    "text": "6. Catalog Search and Retrieve Data for 2020 and 2017\nI am then going to use the pystac_client to search for biodiversity data for the years 2020 and 2017, using the defined bounding box and time range. This will give me access to the first item in the collection for each year.\n\n# Catalog search for 2020 with time range\nsearch_2020 = catalog.search(\n    collections=[\"io-biodiversity\"],\n    intersects=bbox,  # Your bounding box\n    datetime=time_range_2020  # Using time range for 2020\n)\nitem_2020 = search_2020.item_collection()[0]  # First item in the collection\n\n# Catalog search for 2017 with time range\nsearch_2017 = catalog.search(\n    collections=[\"io-biodiversity\"],\n    intersects=bbox,  # Your bounding box\n    datetime=time_range_2017  # Using time range for 2017\n)\nitem_2017 = search_2017.item_collection()[0]  # First item in the collection\n\n\nitem_2017\nitem_2020\n\n\n\n\n\n    \n        \n            \n                \n                    \n        \n            type\n            \"Feature\"\n        \n    \n                \n            \n                \n                    \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n                \n            \n                \n                    \n        stac_extensions[] 3 items\n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/projection/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/raster/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \"https://stac-extensions.github.io/version/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            id\n            \"bii_2020_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n                \n            \n                \n                    \n        \n            geometry\n            \n        \n            \n                \n        \n            type\n            \"Polygon\"\n        \n    \n            \n        \n            \n                \n        coordinates[] 1 items\n        \n            \n        \n            \n                \n        0[] 9 items\n        \n            \n        \n            \n                \n        0[] 2 items\n        \n            \n        \n            \n                \n        \n            0\n            -114.7625474\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        1[] 2 items\n        \n            \n        \n            \n                \n        \n            0\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        2[] 2 items\n        \n            \n        \n            \n                \n        \n            0\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        3[] 2 items\n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        4[] 2 items\n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            29.5649638\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        5[] 2 items\n        \n            \n        \n            \n                \n        \n            0\n            -115.3581305\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            28.0791503\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        6[] 2 items\n        \n            \n        \n            \n                \n        \n            0\n            -115.2036202\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.8662496\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        7[] 2 items\n        \n            \n        \n            \n                \n        \n            0\n            -114.9988044\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.7099428\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        8[] 2 items\n        \n            \n        \n            \n                \n        \n            0\n            -114.7625474\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        bbox[] 4 items\n        \n            \n        \n            \n                \n        \n            0\n            -115.3859782\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            27.565314\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -108.2066425\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            34.7446497\n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            properties\n            \n        \n            \n                \n        \n            datetime\n            None\n        \n    \n            \n        \n            \n                \n        \n            proj:epsg\n            4326\n        \n    \n            \n        \n            \n                \n        proj:shape[] 2 items\n        \n            \n        \n            \n                \n        \n            0\n            7992\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            7992\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            end_datetime\n            \"2020-12-31T23:59:59Z\"\n        \n    \n            \n        \n            \n                \n        proj:transform[] 9 items\n        \n            \n        \n            \n                \n        \n            0\n            0.0008983152841195215\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -115.38597824385106\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            -0.0008983152841195215\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            34.74464974521749\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            1.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            start_datetime\n            \"2020-01-01T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        links[] 5 items\n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"collection\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/io-biodiversity/items/bii_2020_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/map?collection=io-biodiversity&item=bii_2020_34.74464974521749_-115.38597824385106_cog\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/html\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Map of item\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            assets\n            \n        \n            \n                \n        \n            data\n            \n        \n            \n                \n        \n            href\n            \"https://pcdata01euw.blob.core.windows.net/impact/bii-v1/bii_2020/bii_2020_34.74464974521749_-115.38597824385106_cog.tif?st=2024-12-13T04%3A53%3A32Z&se=2024-12-14T05%3A38%3A32Z&sp=rl&sv=2024-05-04&sr=c&skoid=9c8ff44a-6a2c-4dfb-b298-1c9212f64d9a&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2024-12-13T18%3A52%3A58Z&ske=2024-12-20T18%3A52%3A58Z&sks=b&skv=2024-05-04&sig=PQQJMAQokd9KXhi01RW79QNlwYKFC8ZpsjBPeqaD/y8%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff; profile=cloud-optimized\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Biodiversity Intactness\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Terrestrial biodiversity intactness at 100m resolution\"\n        \n    \n            \n        \n            \n                \n        \n            version\n            \"v1\"\n        \n    \n            \n        \n            \n                \n        raster:bands[] 1 items\n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            sampling\n            \"area\"\n        \n    \n            \n        \n            \n                \n        \n            data_type\n            \"float32\"\n        \n    \n            \n        \n            \n                \n        \n            spatial_resolution\n            100\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        roles[] 1 items\n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            tilejson\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=io-biodiversity&item=bii_2020_34.74464974521749_-115.38597824385106_cog&assets=data&tile_format=png&colormap_name=io-bii&rescale=0%2C1&expression=0.97%2A%28data_b1%2A%2A3.84%29&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"TileJSON with default rendering\"\n        \n    \n            \n        \n            \n                \n        roles[] 1 items\n        \n            \n        \n            \n                \n        \n            0\n            \"tiles\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            rendered_preview\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=io-biodiversity&item=bii_2020_34.74464974521749_-115.38597824385106_cog&assets=data&tile_format=png&colormap_name=io-bii&rescale=0%2C1&expression=0.97%2A%28data_b1%2A%2A3.84%29&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/png\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Rendered preview\"\n        \n    \n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        roles[] 1 items\n        \n            \n        \n            \n                \n        \n            0\n            \"overview\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            collection\n            \"io-biodiversity\"\n        \n    \n                \n            \n        \n    \n\n\n\n\nMore data exploration\nI can tell here that the epsg is 4326, it also shows the datetimes are appropriate based on how I defined the date times earlier."
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#load-data-for-2020-and-2017",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#load-data-for-2020-and-2017",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "8. Load Data for 2020 and 2017",
    "text": "8. Load Data for 2020 and 2017\nAfter retrieving the data, I am going to load it using the rioxarray library, which allows me to work with the raster data.\n\n# Loading in the data\nrast_2020 = rioxr.open_rasterio(item_2020.assets[\"data\"].href)\nrast_2017 = rioxr.open_rasterio(item_2017.assets[\"data\"].href)"
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#the-subdivision-in-context",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#the-subdivision-in-context",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "9. The Subdivision in Context",
    "text": "9. The Subdivision in Context\nNow, I am going to make a map of the subdivisions of Maricopa County. I want to plot the boundary of Phoenix against a basemap so that I can refer to it later and know the regions of Phoenix my BII map will be refering to.\n\nfig, ax = plt.subplots(figsize=(10, 10)) \n\n# Create face color and adjust alpha\nfc = colors.to_rgba('mistyrose')\nfc = fc[:-1] + (0.4,)\n\n# Plot the `maricopa` GeoDataFrame\nmaricopa.to_crs(epsg=3857).plot(ax=ax, edgecolor=\"red\", facecolor=fc)\n\n# Add basemap\ncx.add_basemap(ax, zoom=10, source=cx.providers.CartoDB.Voyager)\n\n# Add legend\nlegend_patch = mpatches.Patch(color='mistyrose', label='Maricopa County')\nax.legend(handles=[legend_patch], loc='upper left', fontsize=10)\n\n# Add title\nax.set_title(\"Maricopa County (Phoenix) - County Subdivisions\", fontsize=16)\n\n# Show the plot\nplt.show()\n\n\n\n\n\n\n\n\nThis map shows a clear image of the subdivisions overlaying the Phoenix area. Before I go on to the next step, I want to make sure that I know what the CRS is for the maricopa county data set. I am also going to filter the maricopa data for Phoenix, this seems a bit redundant, but because I will be refering to Phoenix for the rest of this notebook, I want to make sure that is actually the area that I am looking at.\n\n# Check CRS of the Maricopa GeoDataFrame\nprint(maricopa.crs)\n\n# Reproject to match the biodiversity dataset CRS\nmaricopa = maricopa.to_crs(\"EPSG:4326\")\n\nEPSG:4269\n\n\n\n# Filter for Phoenix subdivision (using the NAME column)\nphoenix = maricopa[maricopa['NAME'] == \"Phoenix\"]"
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#clip-raster-data-to-the-phoenix-boundary",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#clip-raster-data-to-the-phoenix-boundary",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "10. Clip Raster Data to the Phoenix Boundary",
    "text": "10. Clip Raster Data to the Phoenix Boundary\nNext, I am going to clip the 2020 and 2017 raster data to the Phoenix boundary, using the GeoDataFrame of the Phoenix subdivisions. This ensures that I only analyze the area of interest (Phoenix area).\n\n# Clip the 2020 raster using the Phoenix geometry\nphoenix_clip_2020 = rast_2020.rio.clip(phoenix.geometry)\n\n# Clip the 2017 raster using the Phoenix geometry\nphoenix_clip_2017 = rast_2017.rio.clip(phoenix.geometry)"
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#plot-the-clipped-data-for-2017-and-2020",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#plot-the-clipped-data-for-2017-and-2020",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "11. Plot the Clipped Data for 2017 and 2020",
    "text": "11. Plot the Clipped Data for 2017 and 2020\nHere, I plot the clipped BII data for both 2020 and 2017 to visually inspect the changes in biodiversity intactness across the two years. These plots help highlight regions of interest.\n\n# Plot the clipped raster with the Maricopa County shapefile boundary\nfig, ax = plt.subplots()\nphoenix_clip_2020.plot(ax=ax)\nphoenix.plot(ax=ax, color=(0.1, 0.2, 0.5, 0.01), edgecolor=\"black\")\nplt.show()\n\n\n\n\n\n\n\n\n\n# Plot the clipped raster with the Maricopa County shapefile boundary\nfig, ax = plt.subplots()\nphoenix_clip_2017.plot(ax=ax)\nphoenix.plot(ax=ax, color=(0.1, 0.2, 0.5, 0.01), edgecolor=\"black\")\nplt.show()\n\n\n\n\n\n\n\n\nIt is hard to see much of a differences betweeen the two years by just looking at the two images, this is why it is beneficial to do further analysis to see a difference."
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#calculate-bii-for-areas-above-threshold-0.75",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#calculate-bii-for-areas-above-threshold-0.75",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "12. Calculate BII for Areas Above Threshold (≥ 0.75)",
    "text": "12. Calculate BII for Areas Above Threshold (≥ 0.75)\nTo get a clearer picture of potential changes in the BII, I am going to focus on areas where the BII value is above 0.75, which is often considered a threshold for “intact” biodiversity. In order to do this, I will use algebra. First I want convert the raster data into boolean arrays where areas with BII greater than or equal to 0.75 are marked as 1 (intact) and areas below that are marked as 0. Then, I am going to calculate the percentage of pixels above this threshold for each year.\n\n# Convert to boolean arrays for BII &gt;= 0.75\nbii_2020_high = (phoenix_clip_2020 &gt;= 0.75).astype(int)\nbii_2017_high = (phoenix_clip_2017 &gt;= 0.75).astype(int)\n\n\n# Find the total number of pixels for each year\ntotal_pixels_2020 = bii_2020_high.count().item()\ntotal_pixels_2017 = bii_2017_high.count().item()\n\n\n# Find count of pixels above 0.75 BII for each year\nbii_pixels_2020 = bii_2020_high.values.sum()\nbii_pixels_2017 = bii_2017_high.values.sum()\n\n\n# Calculate percentages\nbii_pct_2020 = (bii_pixels_2020 / total_pixels_2020) * 100\nbii_pct_2017 = (bii_pixels_2017 / total_pixels_2017) * 100\n\n\nprint(f\"In 2017, {round(bii_pct_2017, 2)}% of Phoenix County had a BII of at least 0.75\")\nprint(f\"In 2020, {round(bii_pct_2020, 2)}% of Phoenix had a BII of at least 0.75\")\n\nIn 2017, 4.18% of Phoenix County had a BII of at least 0.75\nIn 2020, 3.81% of Phoenix had a BII of at least 0.75"
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#calculate-bii-loss-between-2017-and-2020",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#calculate-bii-loss-between-2017-and-2020",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "13. Calculate BII Loss Between 2017 and 2020",
    "text": "13. Calculate BII Loss Between 2017 and 2020\nTo calculate the loss of intact biodiversity, I am going to subtract the 2017 values by the 2020 values. This will create a difference raster, where a value of 1 indicates a loss of intact areas.\n\n# Calculate the difference in pixels above 0.75 from 2017 to 2020\ndiff_2017_2020 = bii_2017_high - bii_2020_high\n\n\n# Set all that are not 1 to NA (pixels that fell below threshold)\nloss_2017_2020 = diff_2017_2020.where(diff_2017_2020 == 1)"
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#visualize-bii-loss",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#visualize-bii-loss",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "14. Visualize BII Loss",
    "text": "14. Visualize BII Loss\nFinally, I visualize the areas that experienced BII loss between 2017 and 2020.\n\n# Create map\nfig, ax = plt.subplots(figsize=(10, 10))\nax.axis('off')\n\n# Plot BII for 2020\nphoenix_clip_2020.plot(ax=ax, cmap='Greens', cbar_kwargs={'orientation': 'horizontal', 'label': 'BII for 2020'})\n\n# Plot BII loss\nloss_2017_2020.plot(ax=ax, cmap='brg', add_colorbar=False)\n\n# Plot Maricopa boundary\nphoenix.plot(ax=ax, color='none', edgecolor='black', linewidth=0.75)\n\n# Add legend\nlegend = [mpatches.Patch(facecolor='red', label='Area with BII ≥ 0.75 lost from 2017 to 2020')]\nax.legend(handles=legend, loc=(0.25, -0.2))\n\n# Set title\nax.set_title(\"Biodiversity Intactness Index (BII)\\ In Phoenix Subdivisions\")\n\n# Show plot (no saving)\nplt.show()\n\n\n\n\n\n\n\n\nThis map shows the Biodiversity Intactness Index (BII) for Maricopa County, which includes the Phoenix metropolitan area, in 2020. The BII is represented by a green color gradient, with darker shades indicating higher biodiversity intactness.\nThe red highlighted areas are locations that experienced significant BII loss between 2017 and 2020 - their BII dropped below 0.75 during this time period, indicating major biodiversity degradation."
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#references-1",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix_blog.html#references-1",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "References",
    "text": "References\nMicrosoft Planetary Computer, STAC Catalog. Biodiversity Intactness. [Dataset]. https://planetarycomputer.microsoft.com/dataset/io-biodiversity. Accessed 7 December, 2024.\nUnited States Census Bureau. 2024. Arizona County TIGER/Line Shapefiles. [Dataset]. United States Census Bureau. https://www.census.gov/geographies/mapping-files/time-series/geo/tiger-line-file.html. Accessed 7 December, 2024."
  },
  {
    "objectID": "blog_posts/2024-10-2024-my-first-post/index.html",
    "href": "blog_posts/2024-10-2024-my-first-post/index.html",
    "title": "blog post title",
    "section": "",
    "text": "I am going to insert a footnote here1\nHeres my next paragraph2"
  },
  {
    "objectID": "blog_posts/2024-10-2024-my-first-post/index.html#this-is-my-first-section",
    "href": "blog_posts/2024-10-2024-my-first-post/index.html#this-is-my-first-section",
    "title": "blog post title",
    "section": "",
    "text": "I am going to insert a footnote here1\nHeres my next paragraph2"
  },
  {
    "objectID": "blog_posts/2024-10-2024-my-first-post/index.html#this-is-my-second",
    "href": "blog_posts/2024-10-2024-my-first-post/index.html#this-is-my-second",
    "title": "blog post title",
    "section": "This is my second",
    "text": "This is my second\nim citing [1]\nblah blah blah trying to cite a journal"
  },
  {
    "objectID": "blog_posts/2024-10-2024-my-first-post/index.html#footnotes",
    "href": "blog_posts/2024-10-2024-my-first-post/index.html#footnotes",
    "title": "blog post title",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nPronghorn footnote↩︎\nhere is my second footnote↩︎"
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "",
    "text": "This notebook performs an analysis of the Biodiversity Intactness Index (BII) for Maricopa County (Phoenix) by comparing BII values in 2017 and 2020. We use the io-biodiversity dataset provided by Impact Observatory and Vizzuality and clip it to the boundary of Maricopa County. You can find the Github repository for it here"
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#setup-and-libraries",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#setup-and-libraries",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "1. Setup and Libraries",
    "text": "1. Setup and Libraries\n\nimport pandas as pd\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches\nfrom matplotlib import colors\nimport xarray as xr\nimport rioxarray as rioxr\nimport geopandas as gpd\nimport pystac_client\nimport planetary_computer\nimport contextily as cx\nfrom pystac_client import Client  # To access STAC catalogs\nimport planetary_computer  # To sign items from the MPC STAC catalog \nfrom IPython.display import Image  # To nicely display images"
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#load-subdivision-shapefile",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#load-subdivision-shapefile",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "2. Load Subdivision Shapefile",
    "text": "2. Load Subdivision Shapefile\n\n# Load subdivision shapefile (county subdivisions for Arizona)\nsubdivision = gpd.read_file('data/subdivision/tl_2024_04_cousub.shp')\n\n# Print first few rows to check the data\nprint(subdivision.head())\n\n  STATEFP COUNTYFP COUSUBFP  COUSUBNS       GEOID              GEOIDFQ  \\\n0      04      005    91198  01934931  0400591198  0600000US0400591198   \n1      04      005    91838  01934953  0400591838  0600000US0400591838   \n2      04      005    91683  01934950  0400591683  0600000US0400591683   \n3      04      023    92295  01934961  0402392295  0600000US0402392295   \n4      04      023    92550  01934966  0402392550  0600000US0402392550   \n\n             NAME            NAMELSAD LSAD CLASSFP  MTFCC FUNCSTAT  \\\n0       Flagstaff       Flagstaff CCD   22      Z5  G4040        S   \n1  Kaibab Plateau  Kaibab Plateau CCD   22      Z5  G4040        S   \n2        Hualapai        Hualapai CCD   22      Z5  G4040        S   \n3         Nogales         Nogales CCD   22      Z5  G4040        S   \n4       Patagonia       Patagonia CCD   22      Z5  G4040        S   \n\n         ALAND    AWATER     INTPTLAT      INTPTLON  \\\n0  12231962349  44576380  +35.1066122  -111.3662507   \n1   7228864156  29327221  +36.5991097  -112.1368033   \n2   2342313339   3772690  +35.9271665  -113.1170408   \n3   1762339489   2382710  +31.4956020  -111.0171332   \n4   1439560139    685527  +31.5664619  -110.6410279   \n\n                                            geometry  \n0  POLYGON ((-112.13370 35.85596, -112.13368 35.8...  \n1  POLYGON ((-112.66039 36.53941, -112.66033 36.5...  \n2  POLYGON ((-113.35416 36.04097, -113.35416 36.0...  \n3  POLYGON ((-111.36692 31.52136, -111.36316 31.5...  \n4  POLYGON ((-110.96273 31.68695, -110.96251 31.6..."
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#filter-for-maricopa-county-phoenix-area",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#filter-for-maricopa-county-phoenix-area",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "3. Filter for Maricopa County (Phoenix Area)",
    "text": "3. Filter for Maricopa County (Phoenix Area)\n\n# Filter for Maricopa County (Phoenix area)\nmaricopa = subdivision[subdivision['NAME'] == \"Phoenix\"]"
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#access-stac-catalog-and-biodiversity-data",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#access-stac-catalog-and-biodiversity-data",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "4. Access STAC Catalog and Biodiversity Data",
    "text": "4. Access STAC Catalog and Biodiversity Data\n\n# Access the STAC catalog for biodiversity data\ncatalog = Client.open(\n    \"https://planetarycomputer.microsoft.com/api/stac/v1\",\n    modifier=planetary_computer.sign_inplace,\n)\n\n# Access the 'io-biodiversity' collection\nbiodiversity = catalog.get_child('io-biodiversity')"
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#defining-the-temporal-and-geographic-ranges",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#defining-the-temporal-and-geographic-ranges",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "5. Defining the Temporal And Geographic Ranges",
    "text": "5. Defining the Temporal And Geographic Ranges\n\n# Pheonix bounding box \nbbox = {\n    \"type\": \"Polygon\",\n    \"coordinates\": [\n        [\n            [-112.826843, 32.974108],  # Bottom-left corner\n            [-112.826843, 33.863574],  # Top-left corner\n            [-111.184387, 33.863574],  # Top-right corner\n            [-111.184387, 32.974108],  # Bottom-right corner\n            [-112.826843, 32.974108],  # Closing the polygon\n        ]\n    ],\n}\n    \n    \n# Define time range for 2020 and 2017\ntime_range_2020 = \"2020-01-01/2020-12-31\"\ntime_range_2017 = \"2017-01-01/2017-12-31\""
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#catalog-search-and-retrieve-data-for-2020-and-2017",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#catalog-search-and-retrieve-data-for-2020-and-2017",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "6. Catalog Search and Retrieve Data for 2020 and 2017",
    "text": "6. Catalog Search and Retrieve Data for 2020 and 2017\n\n# Catalog search for 2020 with time range\nsearch_2020 = catalog.search(\n    collections=[\"io-biodiversity\"],\n    intersects=bbox,  # Your bounding box\n    datetime=time_range_2020  # Using time range for 2020\n)\nitem_2020 = search_2020.item_collection()[0]  # First item in the collection\n\n# Catalog search for 2017 with time range\nsearch_2017 = catalog.search(\n    collections=[\"io-biodiversity\"],\n    intersects=bbox,  # Your bounding box\n    datetime=time_range_2017  # Using time range for 2017\n)\nitem_2017 = search_2017.item_collection()[0]  # First item in the collection"
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#load-data-for-2020-and-2017",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#load-data-for-2020-and-2017",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "8. Load Data for 2020 and 2017",
    "text": "8. Load Data for 2020 and 2017\n\n# Loading in the data\nrast_2020 = rioxr.open_rasterio(item_2020.assets[\"data\"].href)\nrast_2017 = rioxr.open_rasterio(item_2017.assets[\"data\"].href)"
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#the-subdivision-in-context",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#the-subdivision-in-context",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "9. The Subdivision in Context",
    "text": "9. The Subdivision in Context\n\nfig, ax = plt.subplots(figsize=(10, 10)) \n\n# Create face color and adjust alpha\nfc = colors.to_rgba('mistyrose')\nfc = fc[:-1] + (0.4,)\n\n# Plot the `maricopa` GeoDataFrame\nmaricopa.to_crs(epsg=3857).plot(ax=ax, edgecolor=\"red\", facecolor=fc)\n\n# Add basemap\ncx.add_basemap(ax, zoom=10, source=cx.providers.CartoDB.Voyager)\n\n# Add legend\nlegend_patch = mpatches.Patch(color='mistyrose', label='Maricopa County')\nax.legend(handles=[legend_patch], loc='upper left', fontsize=10)\n\n# Add title\nax.set_title(\"Maricopa County (Phoenix) - County Subdivisions\", fontsize=16)\n\n# Show the plot\nplt.show()\n\n\n\n\n\n\n\n\n\n# Check CRS of the Maricopa GeoDataFrame\nprint(maricopa.crs)\n\n# Reproject to match the biodiversity dataset CRS\nmaricopa = maricopa.to_crs(\"EPSG:4326\")\n\nEPSG:4269\n\n\n\n# Filter for Phoenix subdivision (using the NAME column)\nphoenix = maricopa[maricopa['NAME'] == \"Phoenix\"]"
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#clip-raster-data-to-the-phoenix-boundary",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#clip-raster-data-to-the-phoenix-boundary",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "10. Clip Raster Data to the Phoenix Boundary",
    "text": "10. Clip Raster Data to the Phoenix Boundary\n\n# Clip the 2020 raster using the Phoenix geometry\nphoenix_clip_2020 = rast_2020.rio.clip(phoenix.geometry)\n\n# Clip the 2017 raster using the Phoenix geometry\nphoenix_clip_2017 = rast_2017.rio.clip(phoenix.geometry)"
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#plot-the-clipped-data-for-2017-and-2020",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#plot-the-clipped-data-for-2017-and-2020",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "11. Plot the Clipped Data for 2017 and 2020",
    "text": "11. Plot the Clipped Data for 2017 and 2020\n\n# Plot the clipped raster with the Maricopa County shapefile boundary\nfig, ax = plt.subplots()\nphoenix_clip_2020.plot(ax=ax)\nphoenix.plot(ax=ax, color=(0.1, 0.2, 0.5, 0.01), edgecolor=\"black\")\nplt.show()\n\n\n\n\n\n\n\n\n\n# Plot the clipped raster with the Maricopa County shapefile boundary\nfig, ax = plt.subplots()\nphoenix_clip_2017.plot(ax=ax)\nphoenix.plot(ax=ax, color=(0.1, 0.2, 0.5, 0.01), edgecolor=\"black\")\nplt.show()"
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#calculate-bii-for-areas-above-threshold-0.75",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#calculate-bii-for-areas-above-threshold-0.75",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "12. Calculate BII for Areas Above Threshold (≥ 0.75)",
    "text": "12. Calculate BII for Areas Above Threshold (≥ 0.75)\n\n# Convert to boolean arrays for BII &gt;= 0.75\nbii_2020_high = (phoenix_clip_2020 &gt;= 0.75).astype(int)\nbii_2017_high = (phoenix_clip_2017 &gt;= 0.75).astype(int)\n\n\n# Find the total number of pixels for each year\ntotal_pixels_2020 = bii_2020_high.count().item()\ntotal_pixels_2017 = bii_2017_high.count().item()\n\n\n# Find count of pixels above 0.75 BII for each year\nbii_pixels_2020 = bii_2020_high.values.sum()\nbii_pixels_2017 = bii_2017_high.values.sum()\n\n\n# Calculate percentages\nbii_pct_2020 = (bii_pixels_2020 / total_pixels_2020) * 100\nbii_pct_2017 = (bii_pixels_2017 / total_pixels_2017) * 100\n\n\nprint(f\"In 2017, {round(bii_pct_2017, 2)}% of Phoenix County had a BII of at least 0.75\")\nprint(f\"In 2020, {round(bii_pct_2020, 2)}% of Phoenix had a BII of at least 0.75\")\n\nIn 2017, 4.18% of Phoenix County had a BII of at least 0.75\nIn 2020, 3.81% of Phoenix had a BII of at least 0.75"
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#calculate-bii-loss-between-2017-and-2020",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#calculate-bii-loss-between-2017-and-2020",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "13. Calculate BII Loss Between 2017 and 2020",
    "text": "13. Calculate BII Loss Between 2017 and 2020\n\n# Calculate the difference in pixels above 0.75 from 2017 to 2020\ndiff_2017_2020 = bii_2017_high - bii_2020_high\n\n\n# Set all that are not 1 to NA (pixels that fell below threshold)\nloss_2017_2020 = diff_2017_2020.where(diff_2017_2020 == 1)"
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#visualize-bii-loss",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#visualize-bii-loss",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "14. Visualize BII Loss",
    "text": "14. Visualize BII Loss\n\n# Create map\nfig, ax = plt.subplots(figsize=(10, 10))\nax.axis('off')\n\n# Plot BII for 2020\nphoenix_clip_2020.plot(ax=ax, cmap='Greens', cbar_kwargs={'orientation': 'horizontal', 'label': 'BII for 2020'})\n\n# Plot BII loss\nloss_2017_2020.plot(ax=ax, cmap='brg', add_colorbar=False)\n\n# Plot Maricopa boundary\nphoenix.plot(ax=ax, color='none', edgecolor='black', linewidth=0.75)\n\n# Add legend\nlegend = [mpatches.Patch(facecolor='red', label='Area with BII ≥ 0.75 lost from 2017 to 2020')]\nax.legend(handles=legend, loc=(0.25, -0.2))\n\n# Set title\nax.set_title(\"Biodiversity Intactness Index (BII)\\ In Phoenix Subdivisions\")\n\n# Show plot (no saving)\nplt.show()\n\n\n\n\n\n\n\n\nThis map shows the Biodiversity Intactness Index (BII) for Maricopa County, which includes the Phoenix metropolitan area, in 2020. The BII is represented by a green color gradient, with darker shades indicating higher biodiversity intactness.\nThe red highlighted areas are locations that experienced significant BII loss between 2017 and 2020 - their BII dropped below 0.75 during this time period, indicating major biodiversity degradation."
  },
  {
    "objectID": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#references-1",
    "href": "blog_posts/2025-4-21-biodiversity-phoenix/biodiversity_phoenix-blog.html#references-1",
    "title": "Analysis of Biodiversity Intactness Index (BII) for Maricopa County (Phoenix)",
    "section": "References",
    "text": "References\nMicrosoft Planetary Computer, STAC Catalog. Biodiversity Intactness. [Dataset]. https://planetarycomputer.microsoft.com/dataset/io-biodiversity. Accessed 7 December, 2024.\nUnited States Census Bureau. 2024. Arizona County TIGER/Line Shapefiles. [Dataset]. United States Census Bureau. https://www.census.gov/geographies/mapping-files/time-series/geo/tiger-line-file.html. Accessed 7 December, 2024."
  }
]